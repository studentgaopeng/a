{"remainingRequest":"/Users/student-gaopeng/site/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/student-gaopeng/site/mall/src/components/checkOrder.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/student-gaopeng/site/mall/src/components/checkOrder.vue","mtime":1489732299000},{"path":"/Users/student-gaopeng/site/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/student-gaopeng/site/mall/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/student-gaopeng/site/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/student-gaopeng/site/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Dialog from './base/dialog'\nexport default {\n  components: {\n    thisDialog: Dialog\n  },\n  props: {\n    isShowCheckDialog: {\n      type: Boolean,\n      default: false\n    },\n    orderId: {\n      type: [String, Number]\n    }\n  },\n  data () {\n    return {\n      isShowSuccessDialog: false,\n      isShowFailDialog: false\n    }\n  },\n  methods: {\n    checkStatus () {\n      this.$http.post('/api/checkOrder', {\n        orderId: this.orderId\n      })\n      .then((res) => {\n        this.isShowSuccessDialog = true\n        this.$emit('on-close-check-dialog')\n      }, (err) => {\n        this.isShowFailDialog = true\n        this.$emit('on-close-check-dialog')\n      })\n    },\n    toOrderList () {\n      this.$router.push({path: '/orderList'})\n    }\n  }\n}\n",{"version":3,"sources":["checkOrder.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"checkOrder.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <this-dialog :is-show=\"isShowCheckDialog\" @on-close=\"checkStatus\">\n      请检查你的支付状态！\n      <div class=\"button\" @click=\"checkStatus\">\n        支付成功\n      </div>\n      <div class=\"button\" @click=\"checkStatus\">\n        支付失败\n      </div>\n    </this-dialog>\n    <this-dialog :is-show=\"isShowSuccessDialog\" @on-close=\"toOrderList\">\n      购买成功！\n    </this-dialog>\n    <this-dialog :is-show=\"isShowFailDialog\" @on-close=\"toOrderList\">\n      购买失败！\n    </this-dialog>\n  </div>\n</template>\n\n<script>\nimport Dialog from './base/dialog'\nexport default {\n  components: {\n    thisDialog: Dialog\n  },\n  props: {\n    isShowCheckDialog: {\n      type: Boolean,\n      default: false\n    },\n    orderId: {\n      type: [String, Number]\n    }\n  },\n  data () {\n    return {\n      isShowSuccessDialog: false,\n      isShowFailDialog: false\n    }\n  },\n  methods: {\n    checkStatus () {\n      this.$http.post('/api/checkOrder', {\n        orderId: this.orderId\n      })\n      .then((res) => {\n        this.isShowSuccessDialog = true\n        this.$emit('on-close-check-dialog')\n      }, (err) => {\n        this.isShowFailDialog = true\n        this.$emit('on-close-check-dialog')\n      })\n    },\n    toOrderList () {\n      this.$router.push({path: '/orderList'})\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]}]}