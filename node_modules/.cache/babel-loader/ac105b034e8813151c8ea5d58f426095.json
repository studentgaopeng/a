{"remainingRequest":"/Users/student-gaopeng/site/mall/node_modules/babel-loader/lib/index.js!/Users/student-gaopeng/site/mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/student-gaopeng/site/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/student-gaopeng/site/mall/src/components/base/datepicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/student-gaopeng/site/mall/src/components/base/datepicker.vue","mtime":1489732299000},{"path":"/Users/student-gaopeng/site/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/student-gaopeng/site/mall/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/student-gaopeng/site/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/student-gaopeng/site/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    width: {\n      type: String,\n      default: '238px'\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    format: {\n      type: String,\n      default: 'YYYY-MM-DD'\n    },\n    styleObj: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      show: false,\n      showValue: '',\n      days: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n      months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      date: [],\n      now: new Date()\n    };\n  },\n  watch: {\n    now: function now() {\n      this.update();\n    },\n    show: function show() {\n      this.update();\n    }\n  },\n  methods: {\n    close: function close() {\n      this.show = false;\n    },\n    update: function update() {\n      var arr = [];\n      var time = new Date(this.now);\n      time.setMonth(time.getMonth(), 1); // the first day\n\n      var curFirstDay = time.getDay();\n      curFirstDay === 0 && (curFirstDay = 7);\n      time.setDate(0); // the last day\n\n      var lastDayCount = time.getDate();\n\n      for (var i = curFirstDay; i > 0; i--) {\n        arr.push({\n          text: lastDayCount - i + 1,\n          time: new Date(time.getFullYear(), time.getMonth(), lastDayCount - i + 1),\n          status: 'date-pass'\n        });\n      }\n\n      time.setMonth(time.getMonth() + 2, 0); // the last day of this month\n\n      var curDayCount = time.getDate();\n      time.setDate(1); // fix bug when month change\n\n      var value = this.value || this.stringify(new Date());\n\n      for (var _i = 0; _i < curDayCount; _i++) {\n        var tmpTime = new Date(time.getFullYear(), time.getMonth(), _i + 1);\n        var status = '';\n        this.stringify(tmpTime) === value && (status = 'date-active');\n        arr.push({\n          text: _i + 1,\n          time: tmpTime,\n          status: status\n        });\n      }\n\n      var j = 1;\n\n      while (arr.length < 42) {\n        arr.push({\n          text: j,\n          time: new Date(time.getFullYear(), time.getMonth() + 1, j),\n          status: 'date-future'\n        });\n        j++;\n      }\n\n      this.date = arr;\n    },\n    yearClick: function yearClick(flag) {\n      this.now.setFullYear(this.now.getFullYear() + flag);\n      this.now = new Date(this.now);\n    },\n    monthClick: function monthClick(flag) {\n      this.now.setMonth(this.now.getMonth() + flag);\n      this.now = new Date(this.now);\n    },\n    pickDate: function pickDate(index) {\n      this.show = false;\n      this.now = new Date(this.date[index].time);\n      this.showValue = this.stringify();\n      this.$emit('on-change', this.showValue);\n    },\n    parse: function parse(str) {\n      var time = new Date(str);\n      return isNaN(time.getTime()) ? null : time;\n    },\n    stringify: function stringify() {\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.now;\n      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.format;\n      var year = time.getFullYear();\n      var month = time.getMonth() + 1;\n      var date = time.getDate();\n      var monthName = this.months[time.getMonth()];\n      var map = {\n        YYYY: year,\n        MMM: monthName,\n        MM: ('0' + month).slice(-2),\n        M: month,\n        DD: ('0' + date).slice(-2),\n        D: date\n      };\n      return format.replace(/Y+|M+|D+/g, function (str) {\n        return map[str];\n      });\n    },\n    leave: function leave(e) {\n      if (!this.$el.contains(e.target)) {\n        this.close();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.now = this.parse(this.value) || new Date();\n    document.addEventListener('click', this.leave, false);\n  },\n  beforeDestroy: function beforeDestroy() {\n    document.removeEventListener('click', this.leave, false);\n  }\n};",{"version":3,"sources":["datepicker.vue"],"names":[],"mappings":"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","sourcesContent":["<style scoped>\n.datetime-picker {\n    position: relative;\n    display: inline-block;\n    font-family: \"Segoe UI\",\"Lucida Grande\",Helvetica,Arial,\"Microsoft YaHei\";\n    -webkit-font-smoothing: antialiased;\n    color: #333;\n}\n\n.datetime-picker * {\n    box-sizing: border-box;\n}\n\n.datetime-picker input {\n    width: 100%;\n    padding: 5px 10px;\n    height: 30px;\n    outline: 0 none;\n    border: 1px solid #ccc;\n    font-size: 13px;\n}\n\n.datetime-picker .picker-wrap {\n    position: absolute;\n    z-index: 1000;\n    width: 238px;\n    height: 280px;\n    margin-top: 2px;\n    background-color: #fff;\n    box-shadow: 0 0 6px #ccc;\n}\n\n.datetime-picker table {\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n    text-align: center;\n    font-size: 13px;\n}\n\n.datetime-picker tr {\n    height: 34px;\n    border: 0 none;\n}\n\n.datetime-picker th, .datetime-picker td {\n    user-select: none;\n    width: 34px;\n    height: 34px;\n    padding: 0;\n    border: 0 none;\n    line-height: 34px;\n    text-align: center;\n}\n\n.datetime-picker td {\n    cursor: pointer;\n}\n\n.datetime-picker td:hover {\n    background-color: #f0f0f0;\n}\n\n.datetime-picker td.date-pass, .datetime-picker td.date-future {\n    color: #aaa;\n}\n\n.datetime-picker td.date-active {\n    background-color: #ececec;\n    color: #3bb4f2;\n}\n\n.datetime-picker .date-head {\n    background-color: #3bb4f2;\n    text-align: center;\n    color: #fff;\n    font-size: 14px;\n}\n\n.datetime-picker .date-days {\n    color: #3bb4f2;\n    font-size: 14px;\n}\n\n.datetime-picker .show-year {\n    display: inline-block;\n    min-width: 62px;\n    vertical-align: middle;\n}\n\n.datetime-picker .show-month {\n    display: inline-block;\n    min-width: 28px;\n    vertical-align: middle;\n}\n\n.datetime-picker .btn-prev,\n.datetime-picker .btn-next {\n    cursor: pointer;\n    display: inline-block;\n    padding: 0 10px;\n    vertical-align: middle;\n}\n\n.datetime-picker .btn-prev:hover,\n.datetime-picker .btn-next:hover {\n    background: rgba(16, 160, 234, 0.5);\n}\n</style>\n\n<template>\n    <div class=\"datetime-picker\" :style=\"{ width: width }\">\n        <input\n            type=\"text\"\n            :style=\"styleObj\"\n            :readonly=\"readonly\"\n            v-model=\"showValue\"\n            @click=\"show = !show\">\n        <div class=\"picker-wrap\" v-show=\"show\">\n            <table class=\"date-picker\">\n                <thead>\n                    <tr class=\"date-head\">\n                        <th colspan=\"4\">\n                            <span class=\"btn-prev\" @click=\"yearClick(-1)\">&lt;</span>\n                            <span class=\"show-year\">{{now.getFullYear()}}</span>\n                            <span class=\"btn-next\" @click=\"yearClick(1)\">&gt;</span>\n                        </th>\n                        <th colspan=\"3\">\n                            <span class=\"btn-prev\" @click=\"monthClick(-1)\">&lt;</span>\n                            <span class=\"show-month\">{{months[now.getMonth()]}}</span>\n                            <span class=\"btn-next\" @click=\"monthClick(1)\">&gt;</span>\n                        </th>\n                    </tr>\n                    <tr class=\"date-days\">\n                        <th v-for=\"day in days\">{{day}}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"i in 6\">\n                        <td v-for=\"j in 7\"\n                            :class=\"date[i * 7 + j] && date[i * 7 + j].status\"\n                            :date=\"date[i * 7 + j] && date[i * 7 + j].date\"\n                            @click=\"pickDate(i * 7 + j)\">{{date[i * 7 + j] && date[i * 7 + j].text}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            width: { type: String, default: '238px' },\n            readonly: { type: Boolean, default: false },\n            value: { type: String, default: '' },\n            format: { type: String, default: 'YYYY-MM-DD' },\n            styleObj: {type: Object, default: null}\n        },\n        data () {\n            return {\n                show: false,\n                showValue: '',\n                days: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n                months: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                date: [],\n                now: new Date()\n            };\n        },\n        watch: {\n            now () {\n                this.update();\n            },\n            show () {\n                this.update();\n            }\n        },\n        methods: {\n            close () {\n                this.show = false;\n            },\n            update () {\n                var arr = [];\n                var time = new Date(this.now);\n                time.setMonth(time.getMonth(), 1);           // the first day\n                var curFirstDay = time.getDay();\n                curFirstDay === 0 && (curFirstDay = 7);\n                time.setDate(0);                             // the last day\n                var lastDayCount = time.getDate();\n                for (let i = curFirstDay; i > 0; i--) {\n                    arr.push({\n                        text: lastDayCount - i + 1,\n                        time: new Date(time.getFullYear(), time.getMonth(), lastDayCount - i + 1),\n                        status: 'date-pass'\n                    });\n                }\n\n                time.setMonth(time.getMonth() + 2, 0);       // the last day of this month\n                var curDayCount = time.getDate();\n                time.setDate(1);                             // fix bug when month change\n                var value = this.value || this.stringify(new Date());\n                for (let i = 0; i < curDayCount; i++) {\n                    let tmpTime = new Date(time.getFullYear(), time.getMonth(), i + 1);\n                    let status = '';\n                    this.stringify(tmpTime) === value && (status = 'date-active');\n                    arr.push({\n                        text: i + 1,\n                        time: tmpTime,\n                        status: status\n                    });\n                }\n\n                var j = 1;\n                while (arr.length < 42) {\n                    arr.push({\n                        text: j,\n                        time: new Date(time.getFullYear(), time.getMonth() + 1, j),\n                        status: 'date-future'\n                    });\n                    j++;\n                }\n                this.date = arr;\n            },\n            yearClick (flag) {\n                this.now.setFullYear(this.now.getFullYear() + flag);\n                this.now = new Date(this.now);\n            },\n            monthClick (flag) {\n                this.now.setMonth(this.now.getMonth() + flag);\n                this.now = new Date(this.now);\n            },\n            pickDate (index) {\n                this.show = false;\n                this.now = new Date(this.date[index].time);\n                this.showValue = this.stringify();\n                this.$emit('on-change', this.showValue);\n            },\n            parse (str) {\n                var time = new Date(str);\n                return isNaN(time.getTime()) ? null : time;\n            },\n            stringify (time = this.now, format = this.format) {\n                var year = time.getFullYear();\n                var month = time.getMonth() + 1;\n                var date = time.getDate();\n                var monthName = this.months[time.getMonth()];\n\n                var map = {\n                    YYYY: year,\n                    MMM: monthName,\n                    MM: ('0' + month).slice(-2),\n                    M: month,\n                    DD: ('0' + date).slice(-2),\n                    D: date\n                };\n                return format.replace(/Y+|M+|D+/g, function (str) {\n                    return map[str];\n                });\n            },\n            leave (e) {\n                if (!this.$el.contains(e.target)) {\n                    this.close();\n                }\n            }\n        },\n        mounted () {\n            this.now = this.parse(this.value) || new Date();\n            document.addEventListener('click', this.leave, false);\n        },\n        beforeDestroy () {\n            document.removeEventListener('click', this.leave, false);\n        }\n    };\n</script>"],"sourceRoot":"src/components/base"}]}