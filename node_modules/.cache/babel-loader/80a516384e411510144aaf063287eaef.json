{"remainingRequest":"/Users/student-gaopeng/site/mall/node_modules/babel-loader/lib/index.js!/Users/student-gaopeng/site/mall/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/student-gaopeng/site/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/student-gaopeng/site/mall/src/components/base/counter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/student-gaopeng/site/mall/src/components/base/counter.vue","mtime":1489732299000},{"path":"/Users/student-gaopeng/site/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/student-gaopeng/site/mall/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/student-gaopeng/site/mall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/student-gaopeng/site/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    max: {\n      type: Number,\n      default: 5\n    },\n    min: {\n      type: Number,\n      default: 1\n    }\n  },\n  data: function data() {\n    return {\n      number: this.min\n    };\n  },\n  watch: {\n    number: function number() {\n      this.$emit('on-change', this.number);\n    }\n  },\n  methods: {\n    fixNumber: function fixNumber() {\n      var fix;\n\n      if (typeof this.number === 'string') {\n        fix = Number(this.number.replace(/\\D/g, ''));\n      } else {\n        fix = this.number;\n      }\n\n      if (fix > this.max || fix < this.min) {\n        fix = this.min;\n      }\n\n      this.number = fix;\n    },\n    minus: function minus() {\n      if (this.number <= this.min) {\n        return;\n      }\n\n      this.number--;\n    },\n    add: function add() {\n      if (this.number >= this.max) {\n        return;\n      }\n\n      this.number++;\n    }\n  }\n};",{"version":3,"sources":["counter.vue"],"names":[],"mappings":";;;;;;;;;;;;AAWA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GADA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KAAA;AADA,KAAA;AAGA,GAfA;AAgBA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,KAAA,CAAA,WAAA,EAAA,KAAA,MAAA;AACA;AAHA,GAhBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,GAAA;;AACA,UAAA,OAAA,KAAA,MAAA,KAAA,QAAA,EAAA;AACA,QAAA,GAAA,GAAA,MAAA,CAAA,KAAA,MAAA,CAAA,OAAA,CAAA,KAAA,EAAA,EAAA,CAAA,CAAA;AACA,OAFA,MAGA;AACA,QAAA,GAAA,GAAA,KAAA,MAAA;AACA;;AACA,UAAA,GAAA,GAAA,KAAA,GAAA,IAAA,GAAA,GAAA,KAAA,GAAA,EAAA;AACA,QAAA,GAAA,GAAA,KAAA,GAAA;AACA;;AACA,WAAA,MAAA,GAAA,GAAA;AACA,KAbA;AAcA,IAAA,KAdA,mBAcA;AACA,UAAA,KAAA,MAAA,IAAA,KAAA,GAAA,EAAA;AACA;AACA;;AACA,WAAA,MAAA;AACA,KAnBA;AAoBA,IAAA,GApBA,iBAoBA;AACA,UAAA,KAAA,MAAA,IAAA,KAAA,GAAA,EAAA;AACA;AACA;;AACA,WAAA,MAAA;AACA;AAzBA;AArBA,CAAA","sourcesContent":["<template>\n    <div class=\"counter-component\">\n      <div class=\"counter-btn\" @click=\"minus\"> - </div>\n      <div class=\"counter-show\">\n        <input type=\"text\" v-model=\"number\" @keyup=\"fixNumber\">\n      </div>\n      <div class=\"counter-btn\" @click=\"add\"> + </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    max: {\n      type: Number,\n      default: 5\n    },\n    min: {\n      type: Number,\n      default: 1\n    }\n  },\n  data () {\n    return {\n      number: this.min\n    }\n  },\n  watch: {\n    number () {\n      this.$emit('on-change', this.number)\n    }\n  },\n  methods: {\n    fixNumber () {\n      let fix\n      if (typeof this.number === 'string') {\n        fix = Number(this.number.replace(/\\D/g, ''))\n      }\n      else {\n        fix = this.number\n      }\n      if (fix > this.max || fix < this.min) {\n        fix = this.min\n      }\n      this.number = fix\n    },\n    minus () {\n      if (this.number <= this.min) {\n        return\n      }\n      this.number --\n    },\n    add () {\n      if (this.number >= this.max) {\n        return\n      }\n      this.number ++\n    }\n  }\n}\n</script>\n\n<style scoped>\n.counter-component {\n  position: relative;\n  display: inline-block;\n  overflow: hidden;\n  vertical-align: middle;\n}\n.counter-show {\n  float: left;\n}\n.counter-show input {\n  border: none;\n  border-top: 1px solid #e3e3e3;\n  border-bottom: 1px solid #e3e3e3;\n  height: 23px;\n  line-height: 23px;\n  width: 30px;\n  outline: none;\n  text-indent: 4px;\n}\n.counter-btn {\n  border: 1px solid #e3e3e3;\n  float: left;\n  height: 25px;\n  line-height: 25px;\n  width: 25px;\n  text-align: center;\n  cursor: pointer;\n}\n.counter-btn:hover {\n  border-color: #4fc08d;\n  background: #4fc08d;\n  color: #fff;\n}\n\n</style>\n"],"sourceRoot":"src/components/base"}]}